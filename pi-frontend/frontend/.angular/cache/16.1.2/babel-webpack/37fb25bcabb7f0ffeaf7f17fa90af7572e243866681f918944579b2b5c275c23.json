{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CarrosService {\n  pdateCarros(id, endereco) {\n    throw new Error('Method not implemented.');\n  }\n  getCarrosById(id) {\n    throw new Error('Method not implemented.');\n  }\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8080/carros\";\n  }\n  getCarrosList() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  createCarros(carros) {\n    return this.httpClient.post(`${this.baseURL}`, carros);\n  }\n  updateCarros(id, carros) {\n    return this.httpClient.put(`${this.baseURL}/${id}`, carros);\n  }\n  getCarrosByid(id) {\n    return this.httpClient.get(`${this.baseURL}/${id}`);\n  }\n  deleteCarros(id) {\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n  static #_ = this.ɵfac = function CarrosService_Factory(t) {\n    return new (t || CarrosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CarrosService,\n    factory: CarrosService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["CarrosService","pdateCarros","id","endereco","Error","getCarrosById","constructor","httpClient","baseURL","getCarrosList","get","createCarros","carros","post","updateCarros","put","getCarrosByid","deleteCarros","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\PI2023\\pi-frontend\\frontend\\src\\app\\carros.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Carros } from './carros';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CarrosService {\n  pdateCarros(id: number, endereco: Carros) {\n    throw new Error('Method not implemented.');\n  }\n  getCarrosById(id: number) {\n    throw new Error('Method not implemented.');\n  }\n\n private baseURL = \"http://localhost:8080/carros\";\n \n  constructor(private httpClient: HttpClient ) { }\n\ngetCarrosList(): Observable<Carros[]>{\n  return this.httpClient.get<Carros[]>(`${this.baseURL}`);\n}\n\ncreateCarros(carros: Carros): Observable<Object>{\n  return this.httpClient.post(`${this.baseURL}`, carros);\n}\n\nupdateCarros(id: number, carros: Carros): Observable<Object>{\n  return this.httpClient.put(`${this.baseURL}/${id}`, carros);\n}\n\ngetCarrosByid(id: number): Observable<Carros>{\n  return this.httpClient.get<Carros>(`${this.baseURL}/${id}`);\n}\n\ndeleteCarros(id: number): Observable<Object>{\n  return this.httpClient.delete(`${this.baseURL}/${id}`)\n}\n\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,aAAa;EACxBC,WAAWA,CAACC,EAAU,EAAEC,QAAgB;IACtC,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACAC,aAAaA,CAACH,EAAU;IACtB,MAAM,IAAIE,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAIAE,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFvB,KAAAC,OAAO,GAAG,8BAA8B;EAEA;EAEjDC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAW,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EACzD;EAEAG,YAAYA,CAACC,MAAc;IACzB,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,EAAE,EAAEI,MAAM,CAAC;EACxD;EAEAE,YAAYA,CAACZ,EAAU,EAAEU,MAAc;IACrC,OAAO,IAAI,CAACL,UAAU,CAACQ,GAAG,CAAC,GAAG,IAAI,CAACP,OAAO,IAAIN,EAAE,EAAE,EAAEU,MAAM,CAAC;EAC7D;EAEAI,aAAaA,CAACd,EAAU;IACtB,OAAO,IAAI,CAACK,UAAU,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,OAAO,IAAIN,EAAE,EAAE,CAAC;EAC7D;EAEAe,YAAYA,CAACf,EAAU;IACrB,OAAO,IAAI,CAACK,UAAU,CAACW,MAAM,CAAC,GAAG,IAAI,CAACV,OAAO,IAAIN,EAAE,EAAE,CAAC;EACxD;EAAC,QAAAiB,CAAA,G;qBA9BYnB,aAAa,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbxB,aAAa;IAAAyB,OAAA,EAAbzB,aAAa,CAAA0B,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}