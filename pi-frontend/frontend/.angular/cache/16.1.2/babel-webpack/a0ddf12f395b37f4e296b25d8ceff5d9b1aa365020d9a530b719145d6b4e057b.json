{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PdfService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/pi/clientes/pdf';\n  }\n  gerarPdf(clientes) {\n    return this.http.post(this.baseUrl, clientes, {\n      responseType: 'blob'\n    });\n  }\n  static #_ = this.ɵfac = function PdfService_Factory(t) {\n    return new (t || PdfService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PdfService,\n    factory: PdfService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["PdfService","constructor","http","baseUrl","gerarPdf","clientes","post","responseType","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\PI2023\\pi-frontend\\frontend\\src\\app\\pdf.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Cliente } from './cliente';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PdfService {\n\n  private baseUrl = 'http://localhost:8080/pi/clientes/pdf'; \n\n  constructor(private http: HttpClient) {}\n\n  gerarPdf(clientes: Cliente[]): Observable<Blob> {\n    return this.http.post<Blob>(this.baseUrl, clientes, { responseType: 'blob' as 'json' });\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,UAAU;EAIrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,uCAAuC;EAElB;EAEvCC,QAAQA,CAACC,QAAmB;IAC1B,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,IAAI,CAACH,OAAO,EAAEE,QAAQ,EAAE;MAAEE,YAAY,EAAE;IAAgB,CAAE,CAAC;EACzF;EAAC,QAAAC,CAAA,G;qBARUR,UAAU,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVb,UAAU;IAAAc,OAAA,EAAVd,UAAU,CAAAe,IAAA;IAAAC,UAAA,EAFT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}