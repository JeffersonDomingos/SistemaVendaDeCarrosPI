{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ClienteService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8080/pi/clientes\";\n  }\n  getClientesList() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  createCliente(cliente) {\n    return this.httpClient.post(`${this.baseURL}`, cliente);\n  }\n  getClienteByid(id) {\n    return this.httpClient.get(`${this.baseURL}/${id}`);\n  }\n  registrarInteresse(id, interessado) {\n    return this.httpClient.post(`${this.baseURL}/${id}/interesse`, interessado);\n  }\n  liberarCarro(id, carroId) {\n    return this.httpClient.post(`${this.baseURL}/${id}/liberar-carro/${carroId}`, {});\n  }\n  static #_ = this.ɵfac = function ClienteService_Factory(t) {\n    return new (t || ClienteService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClienteService,\n    factory: ClienteService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ClienteService","constructor","httpClient","baseURL","getClientesList","get","createCliente","cliente","post","getClienteByid","id","registrarInteresse","interessado","liberarCarro","carroId","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\PI2023\\pi-frontend\\frontend\\src\\app\\cliente.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Cliente } from './cliente';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClienteService {\n\n  private baseURL = \"http://localhost:8080/pi/clientes\";\n \n  constructor(private httpClient: HttpClient ) { }\n\n\ngetClientesList(): Observable<Cliente[]>{\n  return this.httpClient.get<Cliente[]>(`${this.baseURL}`);\n}\n\ncreateCliente(cliente: Cliente): Observable<Object>{\n  return this.httpClient.post(`${this.baseURL}`, cliente);\n}\n\n\ngetClienteByid(id: number): Observable<Cliente>{\n  return this.httpClient.get<Cliente>(`${this.baseURL}/${id}`);\n}\n\nregistrarInteresse(id: number, interessado: any): Observable<any> {\n  return this.httpClient.post(`${this.baseURL}/${id}/interesse`, interessado);\n}\n\nliberarCarro(id: number, carroId: number): Observable<any> {\n  return this.httpClient.post(`${this.baseURL}/${id}/liberar-carro/${carroId}`, {});\n}\n\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFtB,KAAAC,OAAO,GAAG,mCAAmC;EAEN;EAGjDC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACF,UAAU,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,OAAO,EAAE,CAAC;EAC1D;EAEAG,aAAaA,CAACC,OAAgB;IAC5B,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,EAAE,EAAEI,OAAO,CAAC;EACzD;EAGAE,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACR,UAAU,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,OAAO,IAAIO,EAAE,EAAE,CAAC;EAC9D;EAEAC,kBAAkBA,CAACD,EAAU,EAAEE,WAAgB;IAC7C,OAAO,IAAI,CAACV,UAAU,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,IAAIO,EAAE,YAAY,EAAEE,WAAW,CAAC;EAC7E;EAEAC,YAAYA,CAACH,EAAU,EAAEI,OAAe;IACtC,OAAO,IAAI,CAACZ,UAAU,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,IAAIO,EAAE,kBAAkBI,OAAO,EAAE,EAAE,EAAE,CAAC;EACnF;EAAC,QAAAC,CAAA,G;qBA1BYf,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdpB,cAAc;IAAAqB,OAAA,EAAdrB,cAAc,CAAAsB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}