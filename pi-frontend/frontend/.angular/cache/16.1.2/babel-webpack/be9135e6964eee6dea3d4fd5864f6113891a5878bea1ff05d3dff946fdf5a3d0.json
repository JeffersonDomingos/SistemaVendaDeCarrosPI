{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class MilitarService {\n  pdateMilitar(id, militar) {\n    throw new Error('Method not implemented.');\n  }\n  getMilitarById(id) {\n    throw new Error('Method not implemented.');\n  }\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseURL = \"http://localhost:8080/api/vfinal/militar\";\n  }\n  validarCPF(cpf) {\n    const url = `${this.baseURL}/militar/validar-cpf/${cpf}`;\n    return this.httpClient.get(url);\n  }\n  getMilitarsList() {\n    return this.httpClient.get(`${this.baseURL}`);\n  }\n  createMilitar(militar) {\n    return this.httpClient.post(`${this.baseURL}`, militar);\n  }\n  updateMilitar(id, militar) {\n    return this.httpClient.put(`${this.baseURL}/${id}`, militar);\n  }\n  getMilitarByid(id) {\n    return this.httpClient.get(`${this.baseURL}/${id}`);\n  }\n  deleteMilitar(id) {\n    return this.httpClient.delete(`${this.baseURL}/${id}`);\n  }\n  static #_ = this.ɵfac = function MilitarService_Factory(t) {\n    return new (t || MilitarService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MilitarService,\n    factory: MilitarService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["MilitarService","pdateMilitar","id","militar","Error","getMilitarById","constructor","httpClient","baseURL","validarCPF","cpf","url","get","getMilitarsList","createMilitar","post","updateMilitar","put","getMilitarByid","deleteMilitar","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\PI2023\\pi-frontend\\frontend\\src\\app\\militar.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Militar } from './militar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MilitarService {\n  pdateMilitar(id: number, militar: Militar) {\n    throw new Error('Method not implemented.');\n  }\n  getMilitarById(id: number) {\n    throw new Error('Method not implemented.');\n  }\n\n private baseURL = \"http://localhost:8080/api/vfinal/militar\";\n \n  constructor(private httpClient: HttpClient ) { }\n\n  validarCPF(cpf: string): Observable<boolean> {\n    const url = `${this.baseURL}/militar/validar-cpf/${cpf}`;\n\n    return this.httpClient.get<boolean>(url);\n  }\n\ngetMilitarsList(): Observable<Militar[]>{\n  return this.httpClient.get<Militar[]>(`${this.baseURL}`);\n}\n\ncreateMilitar(militar: Militar): Observable<Object>{\n  return this.httpClient.post(`${this.baseURL}`, militar);\n}\n\nupdateMilitar(id: number, militar: Militar): Observable<Object>{\n  return this.httpClient.put(`${this.baseURL}/${id}`, militar);\n}\n\ngetMilitarByid(id: number): Observable<Militar>{\n  return this.httpClient.get<Militar>(`${this.baseURL}/${id}`);\n}\n\ndeleteMilitar(id: number): Observable<Object>{\n  return this.httpClient.delete(`${this.baseURL}/${id}`)\n}\n\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,cAAc;EACzBC,YAAYA,CAACC,EAAU,EAAEC,OAAgB;IACvC,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACAC,cAAcA,CAACH,EAAU;IACvB,MAAM,IAAIE,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAIAE,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFvB,KAAAC,OAAO,GAAG,0CAA0C;EAEZ;EAE/CC,UAAUA,CAACC,GAAW;IACpB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACH,OAAO,wBAAwBE,GAAG,EAAE;IAExD,OAAO,IAAI,CAACH,UAAU,CAACK,GAAG,CAAUD,GAAG,CAAC;EAC1C;EAEFE,eAAeA,CAAA;IACb,OAAO,IAAI,CAACN,UAAU,CAACK,GAAG,CAAY,GAAG,IAAI,CAACJ,OAAO,EAAE,CAAC;EAC1D;EAEAM,aAAaA,CAACX,OAAgB;IAC5B,OAAO,IAAI,CAACI,UAAU,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,OAAO,EAAE,EAAEL,OAAO,CAAC;EACzD;EAEAa,aAAaA,CAACd,EAAU,EAAEC,OAAgB;IACxC,OAAO,IAAI,CAACI,UAAU,CAACU,GAAG,CAAC,GAAG,IAAI,CAACT,OAAO,IAAIN,EAAE,EAAE,EAAEC,OAAO,CAAC;EAC9D;EAEAe,cAAcA,CAAChB,EAAU;IACvB,OAAO,IAAI,CAACK,UAAU,CAACK,GAAG,CAAU,GAAG,IAAI,CAACJ,OAAO,IAAIN,EAAE,EAAE,CAAC;EAC9D;EAEAiB,aAAaA,CAACjB,EAAU;IACtB,OAAO,IAAI,CAACK,UAAU,CAACa,MAAM,CAAC,GAAG,IAAI,CAACZ,OAAO,IAAIN,EAAE,EAAE,CAAC;EACxD;EAAC,QAAAmB,CAAA,G;qBApCYrB,cAAc,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAd1B,cAAc;IAAA2B,OAAA,EAAd3B,cAAc,CAAA4B,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}