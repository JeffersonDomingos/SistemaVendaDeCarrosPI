{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.isAuthenticated = new BehaviorSubject(false);\n    this.baseUrl = 'http://localhost:8080/pi/login'; // URL do seu backend Spring Boot\n  }\n\n  login(usuario) {\n    return this.http.post(`${this.baseUrl}`, usuario);\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","AuthService","constructor","http","isAuthenticated","baseUrl","login","usuario","post","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\PI2023\\pi-frontend\\frontend\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Usuario } from './usuario';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private isAuthenticated = new BehaviorSubject<boolean>(false);\n  private baseUrl = 'http://localhost:8080/pi/login'; // URL do seu backend Spring Boot\n\n  constructor(private http: HttpClient) { }\n\n  login(usuario: any): Observable<any> {\n    return this.http.post(`${this.baseUrl}`, usuario)\n  }\n  \n\n  }\n\n"],"mappings":"AAGA,SAASA,eAAe,QAAoB,MAAM;;;AAKlD,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,eAAe,GAAG,IAAIJ,eAAe,CAAU,KAAK,CAAC;IACrD,KAAAK,OAAO,GAAG,gCAAgC,CAAC,CAAC;EAEZ;;EAExCC,KAAKA,CAACC,OAAY;IAChB,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAC,GAAG,IAAI,CAACH,OAAO,EAAE,EAAEE,OAAO,CAAC;EACnD;EAAC,QAAAE,CAAA,G;qBATUR,WAAW,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXb,WAAW;IAAAc,OAAA,EAAXd,WAAW,CAAAe,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}